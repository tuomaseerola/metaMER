---
title: "Library Formatter"
author: "Cameron Anderson"
format: html
---

## Reading in Biblibrary

## Load libraries

```{r}
# load dplyr
library(dplyr)
```

## Read data

```{r}
# read in bibtex library as data frame
bib_df_ca <- bib2df::bib2df('metaMER_library_third_pass_ca.bib')
bib_df_te <- bib2df::bib2df('metaMER_library_third_pass_te.bib')
bib_df_ca <- dplyr::filter(bib_df_ca,PRIORITY=='prio1')
bib_df_te <- dplyr::filter(bib_df_te,PRIORITY=='prio1')
sum(bib_df_ca$BIBTEXKEY %in% bib_df_te$BIBTEXKEY)==nrow(bib_df_ca)
```

## Identify sources

```{r}
# filter open_alex entries and declare source (c1 unique to database)
bib_df_ca %>% 
  filter(!is.na(C1)) %>%
  mutate(SOURCE = 'open_alex') -> oa_entries

# filter wos entries and declare source (unique_id unique to database)
bib_df_ca %>% 
  filter(!is.na(UNIQUE.ID)) %>%
  mutate(SOURCE = 'web_of_science') -> wos_entries

# filter scopus entries
bib_df_ca %>% 
  filter(SOURCE == 'Scopus') -> scopus_entries

scopus_entries$JOURNAL <- scopus_entries$JOURNALTITLE
scopus_entries$JOURNALTITLE <- NA

# bind sources
bib_df_ca <- rbind(oa_entries, wos_entries)
bib_df_ca <- rbind(bib_df_ca, scopus_entries)

```

## Clean up entries

```{r}
# remove columns only belonging to one database
bib_df_ca$UNIQUE.ID <- NULL
bib_df_ca$C1 <- NULL
# remove unnecessary column
bib_df_ca$HASABSTRACT <- NULL
# relevel priority column with intuitive names
# bib_df_ca$PRIORITY <- as.factor(bib_df_ca$PRIORITY)
#levels(bib_df_ca$PRIORITY) <- c('high_priority', 'low_priority')
# bib_df_ca$PRIORITY <- plyr::revalue(bib_df_ca$PRIORITY, 
#                                     c(prio1 = 'high_priority',
#                                       prio3 = 'low_prioirty'))
# make casing consistent
bib_df_ca$SOURCE <- tolower(bib_df_ca$SOURCE)
# consistent names for private notes
names(bib_df_ca)[names(bib_df_ca) == 'COMMENT.CAMJA'] <- 'NOTES.CA'
# after subsetting out high-priority studies, no longer need priority column
bib_df_ca$PRIORITY <- NULL
bib_df_ca$RANKING <- NULL
bib_df_ca$MODIFICATIONDATE <- NULL
```

## Add comments from second reviewer

```{r}
# select bibkey (for merge) and notes from second reviewer
bib_df_te <- bib_df_te %>% select(BIBTEXKEY, NOTES.TE)

bib_df_merged <- merge(bib_df_ca, 
                       bib_df_te, 
                       by = c('BIBTEXKEY'))
```

## Drop empty columns

```{r}
# identify columns entirely empty
empty_cols <- sapply(bib_df_merged, function(x) {
  all(is.na(x))
  }
) 
# remove them
bib_df_merged <- bib_df_merged[ , !empty_cols]
```

## Rewrite BiBTeX library

```{r}
dim(bib_df_merged)
bib2df::df2bib(bib_df_merged, file = 'metaMER_library_third_pass_clean.bib')

```

## Next

Compare pass 3 annotations and resolve conflicts (`pass 3 comparison.qmd`)
