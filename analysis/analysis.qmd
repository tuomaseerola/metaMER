# Analysis

This assumes that the data has been parsed (`parse-model-output.R`, `format-study-results.R`) and preprocessed (`processing.qmd`).

### Regression studies

#### Valence: all models, datasets, features

```{r}
#| warning: false
#| eval: true
library(dmetar)
library(tidyverse)
library(meta)

# select regression studies with r2
tmp <- dplyr::filter(metaMER_results,dimension=="valence" & measure=="r2")

# Temporary clarification of N
tmp$stimulus_n[tmp$stimulus_n==" emoMusic: 1000, soundtracks: 360, chinese: 500 "] <- 1000
tmp$stimulus_n[tmp$stimulus_n==" 2372 (subset of PSIC3839, total n: 3839)    "] <- 2372
tmp$stimulus_n[tmp$stimulus_n==" study 1: 20; study 2: 40) % three outliers  "] <- 40
tmp$stimulus_n[tmp$stimulus_n==" MER60: 60, CH818: 818, AMG1608: 1608  "] <- 818
tmp$stimulus_n <- as.numeric(tmp$stimulus_n)

#sqrt(tmp$values) # convert from R^2 to r
#tmp$stimulus_n <- 100 # ad-hoc for now

m.cor <- metacor(cor = sqrt(values), 
                 n = stimulus_n,
                 studlab = studyREF,
                 data = tmp,
                 fixed = FALSE,
                 random = TRUE,
                 sm = "ZCOR",
                 method.tau = "REML",# could be PM (Paule-Mandel) as well
                 method.random.ci = "HK", 
                 title = "MER: Regression: Valence: All")

print(m.cor)
```

## Explore qualities

```{r}
meta <- metagen(values, sqrt(values), 
                data = tmp, 
                studlab = tmp$citekey, 
                comb.fixed = FALSE, 
                method.tau = "PM")
find.outliers(meta)
infan <- InfluenceAnalysis(meta)
print(eggers.test(meta))

```

## Visualise

```{r}
plot(m.cor)
plot(eggers.test(meta))

```

## Take the max from each study

- Also think of max, median/mean and min? 

- Idea: visualise the distributions of the model successes within studies

```{r}
g1 <- ggplot(tmp,aes(y=values,fill=model_class_id))+
  geom_histogram(show.legend = T)+
  facet_wrap(.~studyREF)+
  coord_flip()+
  theme_bw()
g1

# S <- summarise(group_by(tmp,citekey),maxvalue=max(values))
# g<-ggplot(S,aes(y=maxvalue))+
#   geom_histogram(bins = 14)+
#   #facet_wrap(.~studyREF)+
#   coord_flip()+
#   theme_bw()
# g
```

## Plot success across the years


```{r}
#| eval: false
g2 <- ggplot(tmp,aes(y=values,fill=model_class_id))+
  geom_histogram(show.legend = T)+
  facet_wrap(.~studyREF)+
  coord_flip()+
  theme_bw()
g2
```
